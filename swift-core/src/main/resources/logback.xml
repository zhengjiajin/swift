<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds">

	<jmxConfigurator />
	<property resource="app.properties" />
	<!-- log.path 根目录 -->
	<!-- log.maxHistory 最大保留天数 -->
	<!-- sysId 系统ID -->
	<!-- APP_ENV_KEY 运行环境   DEV(""),TEST("test"),DEMO("demo"),PROD("prod") -->
	<property name="pattern" value="%date→%level→%thread→%class{0}→%line→%message%n" />
	<property name="fileNamePattern" value="%d{yyyyMMdd}.%i" />
	<property name="maxHistory" value="${log_maxHistory:-30}" />
	<property name="maxFileSize" value="200MB" />
	<property name="logEnv" value="${APP_ENV_KEY:-dev}"/>
	<property name="logPath" value="${log_path:- }" />
	<property name="logSysId" value="${sysId:- }" />

	<appender name="stdout" class="ch.qos.logback.classic.AsyncAppender">
		<appender name="stdout0" class="ch.qos.logback.core.ConsoleAppender">
			<Target>System.out</Target>
			<encoder><pattern>${pattern}</pattern></encoder>
		</appender>
		<queueSize>10000</queueSize>
		<discardingThreshold>1</discardingThreshold>
		<includeCallerData>true</includeCallerData>
	</appender>

	<appender name="file" class="ch.qos.logback.classic.AsyncAppender">
		<appender name="file0" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<File>${logPath}log/log_${logSysId}.log</File>
			<encoder><pattern>${pattern}</pattern></encoder>
			<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<FileNamePattern>${logPath}log/log_${logSysId}.log.${fileNamePattern}</FileNamePattern>
				<MaxHistory>${maxHistory}</MaxHistory>
				<cleanHistoryOnStart>true</cleanHistoryOnStart>
				<TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<MaxFileSize>${maxFileSize}</MaxFileSize>
				</TimeBasedFileNamingAndTriggeringPolicy>
			</rollingPolicy>
		</appender>
		<discardingThreshold>1</discardingThreshold>
		<includeCallerData>true</includeCallerData>
	</appender>
	
	<appender name="error" class="ch.qos.logback.classic.AsyncAppender">
		<appender name="file0" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<File>${logPath}log/error_${logSysId}_.log</File>
			<encoder><pattern>${pattern}</pattern></encoder>
			<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<FileNamePattern>${logPath}log/error_${logSysId}_.log.${fileNamePattern}</FileNamePattern>
				<MaxHistory>${maxHistory}</MaxHistory>
				<TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
					<MaxFileSize>${maxFileSize}</MaxFileSize>
				</TimeBasedFileNamingAndTriggeringPolicy>
			</rollingPolicy>
			<filter class="ch.qos.logback.classic.filter.LevelFilter">
				<level>ERROR</level> 
				<onMatch>ACCEPT</onMatch> 
				<onMismatch>DENY</onMismatch> 
			</filter> 
		</appender>
		<discardingThreshold>1</discardingThreshold>
		<includeCallerData>true</includeCallerData>
	</appender>

	<root level="INFO">
	     <!-- <appender-ref ref="stdout" />
		 <appender-ref ref="file" />
		 <appender-ref ref="error" /> -->
		<if condition='p("logEnv").contains("dev")'>
		    <then>
		    	<appender-ref ref="stdout" />
		    </then>
		    <else>
		    	<appender-ref ref="file" />
				<appender-ref ref="error" />
		    </else>
		  </if>
	</root>
	
</configuration>
